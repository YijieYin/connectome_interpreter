# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        cache: 'pip' # caching pip dependencies, https://github.com/actions/setup-python#caching-packages-dependencies

    - name: Install package and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Run black on changed files
      run: |
        CHANGED_FILES=$(git diff --diff-filter=d --name-only origin/main | grep '\.py$' || true)
        if [[ -n "$CHANGED_FILES" ]]; then
          black --check -l 88 $CHANGED_FILES || (echo "Please run black" && false)
        else
          echo "No Python files changed."
        fi

    - name: Run type checker
      run: |
        pip install -r requirements-types.txt
        mypy --non-interactive || true

    - name: Test with pytest
      run: |
        pytest -v --cov=connectome_interpreter --cov-report=term
